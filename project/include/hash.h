/**
 * @file hash.h
 *
 * @copyright Lin Huynh, All rights reserved.
 */

#ifndef HASH_H
#define HASH_H

/*******************************************************************************
 * Includes
 ******************************************************************************/
#include <iostream>
#include <vector>

namespace csci3081{
/*******************************************************************************
 * Class Definitions
 ******************************************************************************/
/**
 * @brief This is the hash class that uses to generate unique ID for objects 
 * (either Entity or Battery)
 * Hash object can call nextNumber() to generate the next unique number
 */
class Hash {
    public:
        /**
        * @brief Constructor. 
        * This sets up an instance of Hash with unique numbers from 1 to 10000
        */
        Hash();
        
        /**
        * @brief Constructor. 
        * This sets up an instance of Hash with unique numbers from 1 to range_
        * @param range_ max range of the ID
        */
        Hash(int range_);

        /**
        * @brief This returns the next unique number 
        */
        int nextNumber();

        /**
        * @brief This returns the total number generated
        */
        int GetTotal();

        /**
        * @brief This checks if a Hash object already generates a number
        * @param num an int to check if it has already been generated
        */
        bool Contain(int);
        
        /**
        * @brief This adds a number to the list of numbers generated by a Hash object
        * if that number is not in the list yet
        * @param num an int number to add to the set
        */
        void Add(int);

    private:
        int range;                      //!< Max range of a Hash
        int totalNumber;                //!< Total numbers generated by Hash
        std::vector<int> number;        //!< Vector containing all the numbers generated
};
}

#endif /* HASH_H */
